<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-03T08:23:56 IST" name="Suite" finished-at="2022-11-03T08:24:21 IST" duration-ms="24473">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.SubmitOrderTest(java.util.HashMap)[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" name="SubmitOrderTest" class="Sambit.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.LoginErrorValidation()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" name="LoginErrorValidation" class="Sambit.Tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2022-11-03T08:23:56 IST" name="Error Validation Test" finished-at="2022-11-03T08:24:17 IST" duration-ms="21165">
      <class name="Sambit.Tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:23:56 IST" name="launchApplication" finished-at="2022-11-03T08:24:08 IST" duration-ms="11739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:08 IST" name="LoginErrorValidation" finished-at="2022-11-03T08:24:08 IST" duration-ms="414" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Sambit.Tests.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:08 IST" name="tearDown" finished-at="2022-11-03T08:24:08 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:08 IST" name="launchApplication" finished-at="2022-11-03T08:24:11 IST" duration-ms="2572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:11 IST" name="LoginErrorValidation" finished-at="2022-11-03T08:24:12 IST" duration-ms="481" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Sambit.Tests.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:12 IST" name="tearDown" finished-at="2022-11-03T08:24:12 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:12 IST" name="launchApplication" finished-at="2022-11-03T08:24:15 IST" duration-ms="2517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:15 IST" name="ProductErrorValidation" finished-at="2022-11-03T08:24:17 IST" duration-ms="2416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Sambit.Tests.ErrorValidationTest@33bc72d1]" started-at="2022-11-03T08:24:17 IST" name="tearDown" finished-at="2022-11-03T08:24:17 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Sambit.Tests.ErrorValidationTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2022-11-03T08:23:56 IST" name="Submit Order Test" finished-at="2022-11-03T08:24:21 IST" duration-ms="24473">
      <class name="Sambit.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:23:56 IST" name="launchApplication" finished-at="2022-11-03T08:24:08 IST" duration-ms="11468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrderTest(java.util.HashMap)[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:08 IST" name="SubmitOrderTest" data-provider="getData" finished-at="2022-11-03T08:24:11 IST" duration-ms="3439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Item=ZARA COAT 3, password=Sambit@123, email=sambit.gnit@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:11 IST" name="tearDown" finished-at="2022-11-03T08:24:11 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:11 IST" name="launchApplication" finished-at="2022-11-03T08:24:14 IST" duration-ms="2609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrderTest(java.util.HashMap)[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:14 IST" name="SubmitOrderTest" data-provider="getData" finished-at="2022-11-03T08:24:17 IST" duration-ms="3213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Item=IPHONE 13 PRO, password=Ranaghat@123, email=gojo@ghosh.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:17 IST" name="tearDown" finished-at="2022-11-03T08:24:17 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:17 IST" name="launchApplication" finished-at="2022-11-03T08:24:20 IST" duration-ms="2430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:20 IST" name="OrderHistoryTest" finished-at="2022-11-03T08:24:20 IST" depends-on-methods="Sambit.Tests.SubmitOrderTest.SubmitOrderTest" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Sambit.Tests.SubmitOrderTest@4722ef0c]" started-at="2022-11-03T08:24:20 IST" name="tearDown" finished-at="2022-11-03T08:24:21 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Sambit.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
